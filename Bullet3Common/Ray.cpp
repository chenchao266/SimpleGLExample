#include "Ray.h"
#include "geometry.h"

// -----------------------------------------------------------------------------
// -------------------------------- Ray::Ray -----------------------------------
// -----------------------------------------------------------------------------
Ray::Ray(void)
{
	origin = Vec3f(0, 0, 0);
	direction = Vec3f(0, 1, 0);
}

// -----------------------------------------------------------------------------
// -------------------------------- Ray::Ray -----------------------------------
// -----------------------------------------------------------------------------
Ray::Ray(const Vec3f& pos, const Vec3f& dir)
{
	origin = pos;
	direction = dir;

    direction.normalize();
}

// -----------------------------------------------------------------------------
// ------------------------------- Ray::~Ray -----------------------------------
// -----------------------------------------------------------------------------
Ray::~Ray(void)
{
}

// -----------------------------------------------------------------------------
// ------------------------------- Ray::Transform --------------------------------
// -----------------------------------------------------------------------------
void Ray::Transform(const Matrixf& matrix)
{
	origin = (matrix * origin.to4()).head3();

	Vec3f newDirection;
		newDirection.x =
			matrix(0, 0)*direction.x +
			matrix(1, 0)*direction.y +
			matrix(2, 0)*direction.z;
		newDirection.y =
			matrix(0, 1)*direction.x +
			matrix(1, 1)*direction.y +
			matrix(2, 1)*direction.z;
		newDirection.z =
			matrix(0, 2)*direction.x +
			matrix(1, 2)*direction.y +
			matrix(2, 2)*direction.z;

	direction = newDirection;
}